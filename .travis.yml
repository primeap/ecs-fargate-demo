git:
  depth: false

env:
  global:
    - PROJECT_NAME=ecs-fargate-demo
    - ENV=`if [[ "$TRAVIS_BRANCH" == "master" ]]; then echo "dev"; elif [[ "$TRAVIS_BRANCH" == "prod" ]]; then echo "prod"; elif [[ "$TRAVIS_BRANCH" == "uat" ]]; then echo "uat"; fi`
    - ECR_PROJECT_NAME=ecs-fargate-demo
    - ECR_REPO=995296566838.dkr.ecr.us-east-1.amazonaws.com/$ECR_PROJECT_NAME
    - AWS_REGION=us-east-1
    - PROJECT_VERSION=$(mvn help:evaluate -Dexpression=project.version -DforceStdout -q)

install: true

stages:
  - name: prepare cache
    if: branch IN (master)
  - name: build
    if: branch IN (master, /^hotfix.*$/)
  - name: publish
    if: branch IN (master, /^hotfix.*$/) AND type NOT IN (pull_request)
  - name: deploy
    if: branch IN (master, dev, uat, prod) AND type NOT IN (pull_request)

jobs:
  include:
    - stage: prepare cache
      name: "Prepare cache"
      cache:
        directories:
          - "$HOME/.m2"
      services:
        - docker
      sudo: required
      language: java
      jdk: openjdk11
      addons:
        apt:
          packages:
            - "python3"
            - "python3-pip"
      before_install:
        - pip3 install --upgrade pip
        - pip3 install --upgrade awscli --user
      before_script:
        - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
        - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
        - aws configure set region $AWS_REGION
      script:
        - echo "Downloading and caching project dependencies"
        - mvn dependency:go-offline 
       
    - stage: publish
      name: "Publish Docker image to ECR"
      cache:
        directories:
          - "$HOME/.m2"
      dist: xenial
      language: python
      python:
        - "3.6.7"
      before_install:
        - pip3 install --upgrade awscli
      before_script:
        - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
        - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
        - aws configure set region $AWS_REGION
      script:
        - echo "Publishing Docker image to ECR Started"
        - mvn clean package -DskipTests -B
        - bash dockerPublish.sh
        - echo "Publishing Docker image to ECR Completed"
        
    